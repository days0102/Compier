; ModuleID = 'module'
source_filename = "module"

@0 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1

define void @program() {
global:
  ret void
}

declare i32 @printf(i8*, ...)

declare i32 @scanf(i8*, ...)

define i32 @out(double %0) {
print:
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), double %0)
  ret i32 %1
}

define double @in() {
scan:
  %temp = alloca double
  %0 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0), double* %temp)
  %1 = load double, double* %temp
  ret double %1
}

define void @main() {
class:
  %0 = fsub double 5.000000e+00, 3.000000e+00
  %1 = fsub double %0, 1.000000e+00
  %2 = fadd double %1, 1.000000e+00
  %3 = fadd double %2, 3.000000e+00
  %4 = fsub double 3.000000e+00, 6.000000e+00
  %5 = fadd double %4, 6.000000e+00
  %a = alloca double
  store double 1.000000e+00, double* %a
  %b = alloca double
  %6 = load double, double* %a
  %7 = fadd double %6, 4.000000e+00
  store double %7, double* %b
  %8 = load double, double* %b
  %9 = call i32 @out(double %8)
  %c = alloca double
  %10 = load double, double* %b
  %11 = load double, double* %b
  %12 = fadd double %10, %11
  store double %12, double* %c
  %13 = load double, double* %c
  %14 = call i32 @out(double %13)
  %15 = call double @in()
  store double %15, double* %c
  %16 = load double, double* %c
  %17 = call i32 @out(double %16)
  %18 = load double, double* %b
  %19 = call i32 @out(double %18)
  %20 = fadd double 3.000000e+00, 5.000000e+00
  %21 = call i32 @out(double %20)
  ret void
}

define void @abc() {
class:
  %c = alloca double
  %0 = fadd double 3.000000e+00, 5.000000e+00
  store double %0, double* %c
  %name = alloca double
  %1 = load double, double* %c
  %2 = load double, double* %c
  %3 = fadd double %1, %2
  store double %3, double* %name
  %4 = load double, double* %name
  %5 = load double, double* %c
  %6 = fadd double %4, %5
  store double %6, double* %c
  %7 = call i32 @out(double 1.000000e+00)
  ret void
}

define void @abcd() {
class:
  %c = alloca double
  %0 = fadd double 3.000000e+00, 5.000000e+00
  store double %0, double* %c
  ret void
}
